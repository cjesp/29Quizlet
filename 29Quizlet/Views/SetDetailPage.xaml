<Page
    x:Class="_29Quizlet.Views.SetDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_29Quizlet.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:_29Quizlet.ViewModels"
    xmlns:data="using:_29Quizlet.Models"
    xmlns:controls="using:Template10.Controls"
    xmlns:selector="using:_29Quizlet.TemplateSelectors"
    xmlns:converter="using:_29Quizlet.Converters"
    xmlns:datavm="using:_29Quizlet.Models.ViewModels"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:SetDetailPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <Page.Resources>
        <converter:StarbuttonConverter x:Key="StarButtonConverter"/>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
    
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader Grid.Row="0"  x:Name="pageHeader" Frame="{x:Bind Frame}" Text="{x:Bind ViewModel.Title}">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
        </controls:PageHeader>

        <ScrollViewer Grid.Row="1" VerticalScrollMode="Enabled">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical" Margin="15">
                        <!--<TextBlock FontSize="20" Text="{x:Bind ViewModel.Title}" HorizontalAlignment="Center" />-->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Margin="0,0,0,0" FontSize="12"  Text="{x:Bind ViewModel.TermCount}" VerticalAlignment="Bottom"/>
                            <TextBlock FontSize="12" Text="terms" Margin="3,0,0,0" VerticalAlignment="Bottom"/>
                            <TextBlock Margin="3,0,0,0"  FontSize="12" Text="by " VerticalAlignment="Bottom"/>
                            <TextBlock Tapped="{x:Bind ViewModel.ClickAuthor}" Margin="3,0,0,0" FontSize="12" FontWeight="SemiBold" VerticalAlignment="Bottom" Text="{x:Bind ViewModel.CreatedBy}" />
                        </StackPanel>
                    </StackPanel>

                    <Grid Grid.Row="1" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <Button HorizontalAlignment="Center" Background="Transparent" BorderBrush="#FF4265B2" BorderThickness="2" Width="80" Height="66" 
                                    Click="{x:Bind ViewModel.CardClick}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="20" Text="&#xE923;" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5"/>
                                    <TextBlock Text="Cards" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                </StackPanel>
                            </Button>
                            <Button Margin="5,0,0,0" HorizontalAlignment="Center" Background="Transparent" BorderBrush="#FF4265B2" BorderThickness="2" Width="80" Height="66"
                                    Click="{x:Bind ViewModel.LearnClick}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="20" Text="&#xE8F1;" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5"/>
                                    <TextBlock Text="Learn" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Margin="5,0,0,0" HorizontalAlignment="Center" Background="Transparent" BorderBrush="#FF4265B2" BorderThickness="2" Width="80" Height="66"
                                    Click="{x:Bind ViewModel.MatchClick}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="20" Text="&#xE154;" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,5"/>
                                    <TextBlock Text="Match" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>

                </Grid>

                <Grid Grid.Row="2" Margin="10" x:Name="StudyHeader" Visibility="{x:Bind ViewModel.StudyHeaderVisibility, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Margin="10,0,0,0" Text="{x:Bind ViewModel.StudyNumber, Mode=OneWay}"/>
                    <ToggleSwitch Grid.Column="2" OffContent="" OnContent="" IsOn="{x:Bind ViewModel.StudyStarredTerms, Mode=TwoWay}"/>
                </Grid>

                <ListView Grid.Row="3" 
                          ItemsSource="{x:Bind ViewModel.Terms}">
                    <!--SelectedItem="{x:Bind ViewModel.SelectedTerm, Mode=TwoWay, Converter={StaticResource TermViewModelToObjectConverter}}">-->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="10"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate  x:DataType="datavm:TermViewModel">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{x:Bind TermText}" TextWrapping="Wrap"/>
                                <TextBlock Grid.Column="1" Text="{x:Bind Definition}" TextWrapping="Wrap"/>
                                <Button Grid.Column="2" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Command="{Binding DataContext.SetFavoriteCommand, ElementName=Root}" 
                                        CommandParameter="{Binding}">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="{Binding Favorite, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StarButtonConverter}}" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                
                </ListView>

            </Grid>
        </ScrollViewer>
        <CommandBar Grid.Row="2" Visibility="{x:Bind ViewModel.Editable, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <AppBarButton Icon="Delete" Label="Delete set" Click="{x:Bind ViewModel.DeleteSet}"/>
            <!--/>-->
            <AppBarButton Icon="Edit" Label="Edit set" Click="{x:Bind ViewModel.EditSet}"/>

        </CommandBar>
    </Grid>
</Page>
