<Page
    x:Class="_29Quizlet.Views.LearnEndResultsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_29Quizlet.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:_29Quizlet.ViewModels"
    xmlns:controls="using:Template10.Controls"
    xmlns:converter="using:_29Quizlet.Converters"
    xmlns:selector="using:_29Quizlet.TemplateSelectors"
    xmlns:modelvms="using:_29Quizlet.Models.ViewModels"
    mc:Ignorable="d">
    <Page.Resources>
        <converter:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <DataTemplate  x:DataType="modelvms:ResultHeader" x:Key="ResultHeader">
            <StackPanel Background="{x:Bind BackgroundColor, Converter={StaticResource ColorToBrushConverter}}" Orientation="Horizontal" HorizontalAlignment="Stretch">
                <TextBlock Margin="10" FontSize="12" Text="{x:Bind Title}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:DataType="modelvms:TermResultViewModel" x:Key="Term">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="10,0,0,0" Grid.Column="0" Text="{x:Bind Term.TermText}" TextWrapping="Wrap"/>
                <TextBlock Margin="10,0,0,0" Grid.Column="1" Text="{x:Bind Term.Definition}" TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>
        <selector:HeaderOrTermTemplateSelector x:Key="TemplateSelector" HeaderTemplate="{StaticResource ResultHeader}" TermTemplate="{StaticResource Term}"/>
    </Page.Resources>
    <Page.DataContext>
        <vm:LearnEndResultsPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader Grid.Row="0"  x:Name="pageHeader" Frame="{x:Bind Frame}" Text="Final results">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
        </controls:PageHeader>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Margin="15" Content="Start over" Command="{x:Bind ViewModel.StartOver}"/>
                <Button Grid.Column="2" Margin="15" Content="Back to set" Command="{x:Bind ViewModel.GoBackToSet}"/>
            </Grid>

            <ListView Grid.Row="1" ItemsSource="{x:Bind ViewModel.TermResults}"
                      ItemTemplateSelector="{StaticResource TemplateSelector}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>




            </ListView>
        </Grid>

    </Grid>
</Page>
