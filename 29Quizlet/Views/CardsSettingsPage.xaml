<Page
    x:Class="_29Quizlet.Views.CardsSettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_29Quizlet.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:_29Quizlet.ViewModels"
    xmlns:converter="using:_29Quizlet.Converters"
    xmlns:controls="using:Template10.Controls"
    mc:Ignorable="d">
    <Page.Resources>
        <converter:FlashCardModeConverter x:Key="FlashCardConverter"/>
        <converter:FlashCardSortingModeConverter x:Key="FlashCardSortingModeConverter"/>
    </Page.Resources>
    <Page.DataContext>
        <vm:CardSettingsPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader Grid.Row="0"  x:Name="pageHeader" Frame="{x:Bind Frame}" Text="Card Mode Settings">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
        </controls:PageHeader>

        <StackPanel Grid.Row="1" Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center"
                    Margin="0,100,0,0">
            <TextBlock Text="Flip Mode" FontSize="16" Margin="0,20,0,0"/>
            <ComboBox ItemsSource="{x:Bind ViewModel.PossibleModes}" Margin="0,10,0,0" Width="200"
                      SelectedItem="{x:Bind ViewModel.DefinitionsOrTerm, Mode=TwoWay, Converter={StaticResource FlashCardConverter}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Text="Cards sorted by" FontSize="16" Margin="0,20,0,0"/>
            <ComboBox ItemsSource="{x:Bind ViewModel.PossibleSortingModes}" Margin="0,10,0,0" Width="200"
                      SelectedItem="{x:Bind ViewModel.SortingMode, Mode=TwoWay, Converter={StaticResource FlashCardSortingModeConverter}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Button Command="{x:Bind ViewModel.StartGameCommand}" Width="200" Height="40" Margin="0,20,0,0">
                <TextBlock Text="Start!"/>
            </Button>
        </StackPanel>
    </Grid>
</Page>
