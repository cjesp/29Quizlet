<Page
    x:Class="_29Quizlet.Views.NewClassPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_29Quizlet.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:_29Quizlet.Converters"
    xmlns:vm="using:_29Quizlet.ViewModels"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:NewClassPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:NullableBoolToCheckboxConverter x:Key="NullableBoolToCheckboxConverter"/>
    </Page.Resources>


    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <controls:PageHeader Grid.Row="0"  x:Name="pageHeader" Frame="{x:Bind Frame}" Text="Create a new class" Margin="0,0,0,0">
                <!--  place stretched, across top  -->
                <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
                <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
                <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
            </controls:PageHeader>

            

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>


                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" VerticalAlignment="Center" Margin="0,0,10,-5"
                                    Visibility="{x:Bind ViewModel.ShowClassNameError, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock Text="&#xE711;" VerticalAlignment="Bottom" Foreground="Tomato"  FontFamily="Segoe MDL2 Assets"/>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="NAME" FontSize="12"/>
                            <TextBox Text="{x:Bind ViewModel.ClassName, Mode=TwoWay}" VerticalAlignment="Stretch" TextChanged="{x:Bind ViewModel.ClassNameChanged}"/>
                        </StackPanel>

                    </Grid>

                    <Grid Grid.Row="1" Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" VerticalAlignment="Center" Margin="0,0,10,-5"
                                    Visibility="{x:Bind ViewModel.ShowClassDescriptionError, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock Text="&#xE711;" VerticalAlignment="Bottom" Foreground="Tomato"  FontFamily="Segoe MDL2 Assets"/>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Orientation="Vertical">
                            <TextBlock Text="DESCRIPTION" FontSize="12"/>
                            <TextBox AcceptsReturn="True" TextWrapping="Wrap"
                                     Text="{x:Bind ViewModel.ClassDescription, Mode=TwoWay}" VerticalAlignment="Stretch" TextChanged="{x:Bind ViewModel.ClassDescriptionChanged}"/>
                        </StackPanel>

                    </Grid>

                    <Grid Grid.Row="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Margin="10" Text="CLASS SETS" FontSize="12"/>
                        <ScrollViewer Grid.Row="1" VerticalScrollMode="Enabled">
                            <ListView ItemsSource="{x:Bind ViewModel.ClassSets}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="vm:ClassSetsViewModel">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.55*"/>
                                                <ColumnDefinition Width="0.25*"/>
                                                <ColumnDefinition Width="0.2*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{x:Bind Title}" Grid.Column="0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12"/>
                                            <TextBlock Grid.Column="1" Margin="5,0,0,0" Text="{x:Bind Terms}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
                                                       HorizontalAlignment="Left" FontSize="12"/>
                                        <CheckBox Grid.Column="2"  
                                                  IsChecked="{x:Bind Selected, Mode=TwoWay, Converter={StaticResource NullableBoolToCheckboxConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </ScrollViewer>
                    </Grid>

                    
                </Grid>
            
            <CommandBar Grid.Row="3">
                <AppBarButton Icon="Add" Label="Add sets" Click="{x:Bind ViewModel.FlipModal}"/>
                <AppBarButton Icon="Remove" Label="Remove sets" Click="{x:Bind ViewModel.RemoveSets}"/>
                <AppBarButton Icon="Save" Label="Save" Click="{x:Bind ViewModel.Save}"/>
            </CommandBar>
        </Grid>
        <controls:ModalDialog x:Name="AddSetsModal" CanBackButtonDismiss="True" DisableBackButtonWhenModal="False"  IsModal="{x:Bind ViewModel.ShowModal, Mode=OneWay}">
            <controls:ModalDialog.ModalContent>

                <Grid MaxWidth="700">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".1*"/>
                        <ColumnDefinition Width=".8*"/>
                        <ColumnDefinition Width=".1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.5*"/>
                        <RowDefinition Height="0.25*"/>
                    </Grid.RowDefinitions>

                    <Border Grid.Column="1" Grid.Row="1" BorderThickness="1" BorderBrush="{ThemeResource ApplicationHeaderForegroundThemeBrush}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"> 
                        
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock HorizontalAlignment="Center" Margin="5" Grid.Row="0" Text="Select sets to add" FontSize="16"/>

                            <ListView Grid.Row="1" ItemsSource="{x:Bind ViewModel.MySets}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="vm:ClassSetsViewModel">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.55*"/>
                                                <ColumnDefinition Width="0.25*"/>
                                                <ColumnDefinition Width="0.2*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{x:Bind Title}" Grid.Column="0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12"/>
                                            <TextBlock Grid.Column="1" Text="{x:Bind Terms}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="12" 
                                                       HorizontalAlignment="Center"/>
                                            <CheckBox Grid.Column="2" IsChecked="{x:Bind Selected, Mode=TwoWay, Converter={StaticResource NullableBoolToCheckboxConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <StackPanel Margin="0,10,0,10" Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Margin="0,0,10,0" Content="Add sets" Click="{x:Bind ViewModel.AddSets}"/>
                                <Button Margin="0,0,10,0" Content="Cancel" Click="{x:Bind ViewModel.FlipModal}"/>
                            </StackPanel>

                        </Grid>
                    </Border>
                </Grid>
                
            </controls:ModalDialog.ModalContent>
        </controls:ModalDialog>
    </Grid>
</Page>
