<Page
    x:Class="_29Quizlet.Views.MySetsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_29Quizlet.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:_29Quizlet.ViewModels"
    xmlns:conv="using:_29Quizlet.Converters"
    xmlns:controls="using:Template10.Controls"
    xmlns:data="using:_29Quizlet.Models"
    xmlns:mycontrols="using:_29Quizlet.Controls"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:MySetsPageViewModel x:Name="ViewModel"/>
    </Page.DataContext>
     <Page.Resources>
        <conv:HasImagesConverter x:Key="HasImageConverter"/>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Page.Resources>
   

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader Grid.Row="0"  x:Name="pageHeader" Frame="{x:Bind Frame}" Text="My sets">
            <!--  place stretched, across top  -->
            <RelativePanel.AlignTopWithPanel>True</RelativePanel.AlignTopWithPanel>
            <RelativePanel.AlignRightWithPanel>True</RelativePanel.AlignRightWithPanel>
            <RelativePanel.AlignLeftWithPanel>True</RelativePanel.AlignLeftWithPanel>
        </controls:PageHeader>

        <mycontrols:NothingHereControl Grid.Row="1" Message="{x:Bind ViewModel.Message}" Visibility="{x:Bind ViewModel.ShowNothingHere, Converter={StaticResource BoolToVisibilityConverter}}"/>

        <ListView Grid.Row="2" SelectionMode="Single" ItemsSource="{x:Bind ViewModel.Sets, Mode=OneWay}" 
                  SelectionChanged="{x:Bind ViewModel.SelectedSet}"
                  IsItemClickEnabled="True"
                  Visibility="{x:Bind ViewModel.ContainsData, Converter={StaticResource BoolToVisibilityConverter}}">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="data:SetViewModel">
                    <StackPanel Orientation="Vertical" Margin="5,10,0,10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" FontSize="20" TextTrimming="CharacterEllipsis" Text="{x:Bind Title}"/>
                            <TextBlock Grid.Column="1" FontSize="12" Margin="3,5,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontFamily="Segoe MDL2 Assets" Text="{x:Bind HasImages}"/>
                        </Grid>
                        <TextBlock FontSize="16" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" 
                                   Visibility="{x:Bind HasDescription, Converter={StaticResource BoolToVisibilityConverter}}" 
                                   Text="{x:Bind Description}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="12" TextTrimming="CharacterEllipsis">
                                <Run FontSize="12" Text="{x:Bind Date}"/>
                                <Run FontSize="12" Text=" | "/>
                                <Run FontSize="12" Text="{x:Bind TermCount}"/>
                                <Run FontSize="12" Text=" by "/>
                                <Run FontSize="12" FontWeight="Bold" Text="{x:Bind Author}"/>
                            </TextBlock>
                            <Border Visibility="{x:Bind IsPrivate, Converter={StaticResource BoolToVisibilityConverter}}" 
                                    Background="LightGray" CornerRadius="2 2 2 2" Margin="5,0,0,0" Padding="2">
                                <TextBlock VerticalAlignment="Center" FontSize="8" Foreground="Black">
                                    PRIVATE
                                </TextBlock>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <CommandBar Grid.Row="3">
            <AppBarToggleButton Icon="Refresh" Label="Update" Click="{x:Bind ViewModel.Refresh}"/>
            <AppBarToggleButton Icon="Add" Label="New set" Click="{x:Bind ViewModel.NewSet}"/>
        </CommandBar>

    </Grid>
</Page>
